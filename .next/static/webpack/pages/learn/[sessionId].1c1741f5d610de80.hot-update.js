"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/learn/[sessionId]",{

/***/ "./src/utils/storage.ts":
/*!******************************!*\
  !*** ./src/utils/storage.ts ***!
  \******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addLearningCard: function() { return /* binding */ addLearningCard; },\n/* harmony export */   clearAPIConfig: function() { return /* binding */ clearAPIConfig; },\n/* harmony export */   clearAllData: function() { return /* binding */ clearAllData; },\n/* harmony export */   deleteLearningCard: function() { return /* binding */ deleteLearningCard; },\n/* harmony export */   deleteSession: function() { return /* binding */ deleteSession; },\n/* harmony export */   exportData: function() { return /* binding */ exportData; },\n/* harmony export */   getAPIConfig: function() { return /* binding */ getAPIConfig; },\n/* harmony export */   getAllCards: function() { return /* binding */ getAllCards; },\n/* harmony export */   getAllSessions: function() { return /* binding */ getAllSessions; },\n/* harmony export */   getCardsForReview: function() { return /* binding */ getCardsForReview; },\n/* harmony export */   getSessionById: function() { return /* binding */ getSessionById; },\n/* harmony export */   getSessionCards: function() { return /* binding */ getSessionCards; },\n/* harmony export */   getStorageStats: function() { return /* binding */ getStorageStats; },\n/* harmony export */   getUserPreferences: function() { return /* binding */ getUserPreferences; },\n/* harmony export */   importData: function() { return /* binding */ importData; },\n/* harmony export */   markChapterCompleted: function() { return /* binding */ markChapterCompleted; },\n/* harmony export */   recordCardReview: function() { return /* binding */ recordCardReview; },\n/* harmony export */   saveAPIConfig: function() { return /* binding */ saveAPIConfig; },\n/* harmony export */   saveSession: function() { return /* binding */ saveSession; },\n/* harmony export */   saveUserPreferences: function() { return /* binding */ saveUserPreferences; },\n/* harmony export */   unmarkChapterCompleted: function() { return /* binding */ unmarkChapterCompleted; },\n/* harmony export */   updateLearningCard: function() { return /* binding */ updateLearningCard; },\n/* harmony export */   updateSessionCurrentChapter: function() { return /* binding */ updateSessionCurrentChapter; },\n/* harmony export */   updateSessionMessages: function() { return /* binding */ updateSessionMessages; }\n/* harmony export */ });\n/**\n * 本地存储工具类\n * \n * 提供了完整的localStorage管理功能：\n * - 安全的数据读写操作\n * - 会话管理（增删改查）\n * - API配置管理\n * - 数据版本控制和迁移\n */ const STORAGE_KEY = \"ai-learning-platform\";\nconst CURRENT_VERSION = \"1.0.0\";\n/**\n * 获取默认的用户偏好设置\n */ const getDefaultPreferences = ()=>({\n        defaultLearningLevel: \"beginner\",\n        theme: \"light\",\n        language: \"zh\",\n        soundEnabled: true,\n        autoSave: true\n    });\n/**\n * 获取默认的存储数据结构\n */ const getDefaultStorageData = ()=>({\n        sessions: [],\n        preferences: getDefaultPreferences(),\n        version: CURRENT_VERSION\n    });\n/**\n * 安全地从localStorage读取数据\n * 处理JSON解析错误和数据格式不匹配的情况\n */ const safeGetStorageData = ()=>{\n    try {\n        if (false) {}\n        const stored = localStorage.getItem(STORAGE_KEY);\n        if (!stored) {\n            return getDefaultStorageData();\n        }\n        const parsed = JSON.parse(stored);\n        // 检查数据版本，如需要则进行迁移\n        if (parsed.version !== CURRENT_VERSION) {\n            return migrateStorageData(parsed);\n        }\n        // 确保必要字段存在\n        return {\n            ...getDefaultStorageData(),\n            ...parsed,\n            preferences: {\n                ...getDefaultPreferences(),\n                ...parsed.preferences || {}\n            }\n        };\n    } catch (error) {\n        console.warn(\"读取本地存储数据失败，使用默认配置:\", error);\n        return getDefaultStorageData();\n    }\n};\n/**\n * 数据版本迁移函数\n * 处理不同版本间的数据结构变化\n */ const migrateStorageData = (oldData)=>{\n    console.log(\"正在迁移存储数据从版本\", oldData.version, \"到\", CURRENT_VERSION);\n    // 目前只有一个版本，暂时直接返回默认数据\n    // 未来版本可在此处添加具体的迁移逻辑\n    return {\n        ...getDefaultStorageData(),\n        sessions: Array.isArray(oldData.sessions) ? oldData.sessions : []\n    };\n};\n/**\n * 安全地保存数据到localStorage\n */ const safeSaveStorageData = (data)=>{\n    try {\n        if (false) {}\n        localStorage.setItem(STORAGE_KEY, JSON.stringify(data));\n        return true;\n    } catch (error) {\n        console.error(\"保存本地存储数据失败:\", error);\n        return false;\n    }\n};\n// =================\n// 会话管理功能\n// =================\n/**\n * 获取所有学习会话\n * 按最后更新时间倒序排列\n */ const getAllSessions = ()=>{\n    const data = safeGetStorageData();\n    return data.sessions.sort((a, b)=>b.updatedAt - a.updatedAt);\n};\n/**\n * 根据ID获取特定会话\n */ const getSessionById = (id)=>{\n    const data = safeGetStorageData();\n    return data.sessions.find((session)=>session.id === id) || null;\n};\n/**\n * 保存学习会话（新增或更新）\n * 如果会话ID已存在则更新，否则新增\n */ const saveSession = (session)=>{\n    try {\n        const data = safeGetStorageData();\n        const existingIndex = data.sessions.findIndex((s)=>s.id === session.id);\n        const updatedSession = {\n            ...session,\n            updatedAt: Date.now()\n        };\n        if (existingIndex >= 0) {\n            // 更新现有会话\n            data.sessions[existingIndex] = updatedSession;\n        } else {\n            // 新增会话\n            data.sessions.push(updatedSession);\n        }\n        return safeSaveStorageData(data);\n    } catch (error) {\n        console.error(\"保存会话失败:\", error);\n        return false;\n    }\n};\n/**\n * 删除学习会话\n */ const deleteSession = (id)=>{\n    try {\n        const data = safeGetStorageData();\n        data.sessions = data.sessions.filter((session)=>session.id !== id);\n        return safeSaveStorageData(data);\n    } catch (error) {\n        console.error(\"删除会话失败:\", error);\n        return false;\n    }\n};\n/**\n * 更新会话的对话历史\n * 专门用于高频的消息更新操作\n */ const updateSessionMessages = (sessionId, messages)=>{\n    const session = getSessionById(sessionId);\n    if (!session) {\n        return false;\n    }\n    return saveSession({\n        ...session,\n        messages\n    });\n};\n/**\n * 更新会话的当前章节\n */ const updateSessionCurrentChapter = (sessionId, chapterId)=>{\n    const session = getSessionById(sessionId);\n    if (!session) {\n        return false;\n    }\n    return saveSession({\n        ...session,\n        currentChapter: chapterId\n    });\n};\n/**\n * 标记章节为已完成\n */ const markChapterCompleted = (sessionId, chapterId)=>{\n    const session = getSessionById(sessionId);\n    if (!session) {\n        return false;\n    }\n    const updatedOutline = session.outline.map((item)=>item.id === chapterId ? {\n            ...item,\n            isCompleted: true,\n            completedAt: Date.now()\n        } : item);\n    return saveSession({\n        ...session,\n        outline: updatedOutline\n    });\n};\n/**\n * 取消章节完成状态\n */ const unmarkChapterCompleted = (sessionId, chapterId)=>{\n    const session = getSessionById(sessionId);\n    if (!session) {\n        return false;\n    }\n    const updatedOutline = session.outline.map((item)=>item.id === chapterId ? {\n            ...item,\n            isCompleted: false,\n            completedAt: undefined\n        } : item);\n    return saveSession({\n        ...session,\n        outline: updatedOutline\n    });\n};\n// =================\n// 卡片管理功能\n// =================\n/**\n * 获取所有会话的卡片\n */ const getAllCards = ()=>{\n    const data = safeGetStorageData();\n    const allCards = [];\n    data.sessions.forEach((session)=>{\n        if (session.cards) {\n            allCards.push(...session.cards);\n        }\n    });\n    return allCards.sort((a, b)=>b.createdAt - a.createdAt);\n};\n/**\n * 添加学习卡片\n */ const addLearningCard = (sessionId, card)=>{\n    try {\n        const session = getSessionById(sessionId);\n        if (!session) return false;\n        // 确保卡片有tags字段\n        const cardWithTags = {\n            ...card,\n            tags: card.tags || []\n        };\n        const updatedSession = {\n            ...session,\n            cards: [\n                ...session.cards || [],\n                cardWithTags\n            ]\n        };\n        return saveSession(updatedSession);\n    } catch (error) {\n        console.error(\"添加学习卡片失败:\", error);\n        return false;\n    }\n};\n/**\n * 更新学习卡片\n */ const updateLearningCard = (sessionId, cardId, updates)=>{\n    try {\n        const session = getSessionById(sessionId);\n        if (!session) return false;\n        const updatedCards = (session.cards || []).map((card)=>card.id === cardId ? {\n                ...card,\n                ...updates\n            } : card);\n        const updatedSession = {\n            ...session,\n            cards: updatedCards\n        };\n        return saveSession(updatedSession);\n    } catch (error) {\n        console.error(\"更新学习卡片失败:\", error);\n        return false;\n    }\n};\n/**\n * 删除学习卡片\n */ const deleteLearningCard = (sessionId, cardId)=>{\n    try {\n        const session = getSessionById(sessionId);\n        if (!session) return false;\n        const updatedCards = (session.cards || []).filter((card)=>card.id !== cardId);\n        const updatedSession = {\n            ...session,\n            cards: updatedCards\n        };\n        return saveSession(updatedSession);\n    } catch (error) {\n        console.error(\"删除学习卡片失败:\", error);\n        return false;\n    }\n};\n/**\n * 获取会话的所有卡片\n */ const getSessionCards = (sessionId)=>{\n    const session = getSessionById(sessionId);\n    const cards = (session === null || session === void 0 ? void 0 : session.cards) || [];\n    // 按创建时间倒序排列，最新的卡片在前面\n    return cards.sort((a, b)=>b.createdAt - a.createdAt);\n};\n/**\n * 获取需要复习的卡片\n */ const getCardsForReview = (sessionId)=>{\n    const cards = getSessionCards(sessionId);\n    const now = Date.now();\n    return cards.filter((card)=>card.nextReviewAt <= now);\n};\n/**\n * 记录卡片复习\n */ const recordCardReview = (sessionId, cardId, quality)=>{\n    try {\n        var _session_cards;\n        const session = getSessionById(sessionId);\n        if (!session) return false;\n        const card = (_session_cards = session.cards) === null || _session_cards === void 0 ? void 0 : _session_cards.find((c)=>c.id === cardId);\n        if (!card) return false;\n        // 计算下次复习时间（艾宾浩斯遗忘曲线）\n        const nextInterval = calculateNextReviewInterval(card.reviewCount, quality, card.difficulty);\n        const nextReviewAt = Date.now() + nextInterval;\n        const updatedCard = {\n            ...card,\n            lastReviewedAt: Date.now(),\n            nextReviewAt,\n            reviewCount: card.reviewCount + 1,\n            difficulty: Math.max(1, Math.min(5, card.difficulty + (quality < 3 ? 1 : -0.1)))\n        };\n        return updateLearningCard(sessionId, cardId, updatedCard);\n    } catch (error) {\n        console.error(\"记录卡片复习失败:\", error);\n        return false;\n    }\n};\n/**\n * 计算下次复习间隔（基于艾宾浩斯遗忘曲线）\n */ const calculateNextReviewInterval = (reviewCount, quality, difficulty)=>{\n    // 基础间隔（毫秒）\n    const baseIntervals = [\n        1 * 60 * 1000,\n        10 * 60 * 1000,\n        60 * 60 * 1000,\n        6 * 60 * 60 * 1000,\n        24 * 60 * 60 * 1000\n    ];\n    // 如果复习质量差（quality < 3），重置到第一个间隔\n    if (quality < 3) {\n        return baseIntervals[0];\n    }\n    // 根据复习次数选择基础间隔\n    const baseInterval = baseIntervals[Math.min(reviewCount, baseIntervals.length - 1)];\n    // 根据难度调整间隔\n    const difficultyFactor = 2.5 - (difficulty - 1) * 0.3; // 难度越高，间隔越短\n    return Math.round(baseInterval * difficultyFactor);\n};\n// =================\n// API配置管理\n// =================\n/**\n * 获取API配置\n */ const getAPIConfig = ()=>{\n    const data = safeGetStorageData();\n    return data.apiConfig || null;\n};\n/**\n * 保存API配置\n */ const saveAPIConfig = (config)=>{\n    try {\n        const data = safeGetStorageData();\n        data.apiConfig = config;\n        return safeSaveStorageData(data);\n    } catch (error) {\n        console.error(\"保存API配置失败:\", error);\n        return false;\n    }\n};\n/**\n * 清除API配置\n */ const clearAPIConfig = ()=>{\n    try {\n        const data = safeGetStorageData();\n        delete data.apiConfig;\n        return safeSaveStorageData(data);\n    } catch (error) {\n        console.error(\"清除API配置失败:\", error);\n        return false;\n    }\n};\n// =================\n// 用户偏好管理\n// =================\n/**\n * 获取用户偏好设置\n */ const getUserPreferences = ()=>{\n    const data = safeGetStorageData();\n    return data.preferences;\n};\n/**\n * 保存用户偏好设置\n */ const saveUserPreferences = (preferences)=>{\n    try {\n        const data = safeGetStorageData();\n        data.preferences = {\n            ...data.preferences,\n            ...preferences\n        };\n        return safeSaveStorageData(data);\n    } catch (error) {\n        console.error(\"保存用户偏好失败:\", error);\n        return false;\n    }\n};\n// =================\n// 数据清理和维护\n// =================\n/**\n * 清理所有本地数据\n * 谨慎使用，这将删除所有学习记录\n */ const clearAllData = ()=>{\n    try {\n        if (true) {\n            localStorage.removeItem(STORAGE_KEY);\n        }\n        return true;\n    } catch (error) {\n        console.error(\"清理数据失败:\", error);\n        return false;\n    }\n};\n/**\n * 获取存储使用情况统计\n */ const getStorageStats = ()=>{\n    const data = safeGetStorageData();\n    const serialized = JSON.stringify(data);\n    return {\n        sessionCount: data.sessions.length,\n        totalSizeBytes: new Blob([\n            serialized\n        ]).size,\n        totalSizeKB: Math.round(new Blob([\n            serialized\n        ]).size / 1024 * 100) / 100,\n        hasAPIConfig: !!data.apiConfig,\n        version: data.version\n    };\n};\n/**\n * 导出数据（用于备份）\n */ const exportData = ()=>{\n    const data = safeGetStorageData();\n    return JSON.stringify(data, null, 2);\n};\n/**\n * 导入数据（用于恢复备份）\n */ const importData = (jsonData)=>{\n    try {\n        const importedData = JSON.parse(jsonData);\n        // 基本数据验证\n        if (!Array.isArray(importedData.sessions)) {\n            throw new Error(\"无效的数据格式：sessions必须是数组\");\n        }\n        // 如果有版本差异，进行迁移\n        const finalData = importedData.version !== CURRENT_VERSION ? migrateStorageData(importedData) : importedData;\n        return safeSaveStorageData(finalData);\n    } catch (error) {\n        console.error(\"导入数据失败:\", error);\n        return false;\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/utils/storage.ts\n"));

/***/ })

});